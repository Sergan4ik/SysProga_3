package - keyword
com - identifier
. - operator
company - identifier
; - delimiter
import - keyword
java - identifier
. - operator
io - identifier
. - operator
BufferedReader - identifier
; - delimiter
import - keyword
java - identifier
. - operator
io - identifier
. - operator
FileReader - identifier
; - delimiter
import - keyword
java - identifier
. - operator
io - identifier
. - operator
IOException - identifier
; - delimiter
import - keyword
java - identifier
. - operator
util - identifier
. - operator
ArrayList - identifier
; - delimiter
import - keyword
java - identifier
. - operator
util - identifier
. - operator
List - identifier
; - delimiter
import - keyword
java - identifier
. - operator
util - identifier
. - operator
regex - identifier
. - operator
Pattern - identifier
; - delimiter
public - keyword
class - keyword
Main - identifier
{ - delimiter
public - keyword
static - keyword
void - keyword
main - identifier
( - delimiter
String - identifier
[ - operator
] - operator
args - identifier
) - delimiter
throws - identifier
IOException - identifier
{ - delimiter
StringBuilder - identifier
text - identifier
= - operator
new - keyword
StringBuilder - identifier
( - delimiter
) - delimiter
; - delimiter
try - keyword
( - delimiter
BufferedReader - identifier
reader - identifier
= - operator
new - keyword
BufferedReader - identifier
( - delimiter
new - keyword
FileReader - identifier
( - delimiter
) - delimiter
) - delimiter
) - delimiter
{ - delimiter
reader - identifier
. - operator
lines - identifier
( - delimiter
) - delimiter
. - operator
for - keyword
( - delimiter
s - identifier
- - operator
> - operator
{ - delimiter
text - identifier
. - operator
append - identifier
( - delimiter
s - identifier
) - delimiter
; - delimiter
ext - identifier
. - operator
append - identifier
( - delimiter
) - delimiter
; - delimiter
} - delimiter
) - delimiter
; - delimiter
} - delimiter
int - keyword
a - identifier
= - operator
( - delimiter
5 - decimal literal
+ - operator
2 - decimal literal
) - delimiter
* - operator
3 - decimal literal
; - delimiter
Analyzer - identifier
analyzer - identifier
= - operator
new - keyword
Analyzer - identifier
( - delimiter
) - delimiter
; - delimiter
analyzer - identifier
. - operator
analyze - identifier
( - delimiter
text - identifier
. - operator
toString - identifier
( - delimiter
) - delimiter
, - delimiter
buildPatterns - identifier
( - delimiter
) - delimiter
) - delimiter
; - delimiter
} - delimiter
private - keyword
static - keyword
List - identifier
< - operator
Analyzer - identifier
. - operator
PatternWithName - identifier
> - operator
buildPatterns - identifier
( - delimiter
) - delimiter
{ - delimiter
List - identifier
< - operator
Analyzer - identifier
. - operator
PatternWithName - identifier
> - operator
patterns - identifier
= - operator
new - keyword
ArrayList - identifier
< - operator
> - operator
( - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
STRING_LITERAL - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
CHAR - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
CHAR_ERROR - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
KEYWORD - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
IDENTIFIER - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
OPERATORS - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
DECIMAL_LITERAL - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
BIN_LITERAL - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
OCT_LITERAL - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
HEX_LITERAL - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
BOOL_LITERAL - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
patterns - identifier
. - operator
add - identifier
( - delimiter
new - keyword
Analyzer - identifier
. - operator
PatternWithName - identifier
( - delimiter
Pattern - identifier
. - operator
compile - identifier
( - delimiter
Patterns - identifier
. - operator
DELIMITER - identifier
) - delimiter
, - delimiter
) - delimiter
) - delimiter
; - delimiter
return - identifier
patterns - identifier
; - delimiter
} - delimiter
} - delimiter
